// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reservator.DAL;

namespace Reservator.DAL.Migrations
{
    [DbContext(typeof(ReservatorDbContext))]
    partial class ReservatorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Reservator")
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Reservator.Model.ObjectOwner", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("1");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("ObjectOwners");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            DateCreated = new DateTime(2019, 5, 19, 14, 40, 48, 551, DateTimeKind.Local).AddTicks(8865),
                            Description = "Desc1",
                            Name = "Owner1"
                        },
                        new
                        {
                            ID = 2,
                            Active = true,
                            DateCreated = new DateTime(2019, 5, 19, 14, 40, 48, 560, DateTimeKind.Local).AddTicks(2598),
                            Description = "Desc2",
                            Name = "Owner2"
                        });
                });

            modelBuilder.Entity("Reservator.Model.Reservation", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("1");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DateFrom")
                        .IsRequired();

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DateTo")
                        .IsRequired();

                    b.Property<int?>("ReservationObjectID")
                        .IsRequired();

                    b.Property<int?>("UserID")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("ReservationObjectID");

                    b.HasIndex("UserID");

                    b.ToTable("Reservations");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            DateCreated = new DateTime(2019, 5, 19, 14, 40, 48, 572, DateTimeKind.Local).AddTicks(5580),
                            DateFrom = new DateTime(2019, 5, 19, 14, 40, 48, 572, DateTimeKind.Local).AddTicks(5841),
                            DateTo = new DateTime(2019, 5, 19, 14, 40, 48, 572, DateTimeKind.Local).AddTicks(6829),
                            ReservationObjectID = 1,
                            UserID = 1
                        });
                });

            modelBuilder.Entity("Reservator.Model.ReservationObject", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("1");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description");

                    b.Property<long?>("MaximumReservationTime")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<int?>("ObjectOwnerID")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("ObjectOwnerID");

                    b.ToTable("ReservationObjects");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            DateCreated = new DateTime(2019, 5, 19, 14, 40, 48, 569, DateTimeKind.Local).AddTicks(1182),
                            Description = "Reservation object A",
                            MaximumReservationTime = 864000000000L,
                            Name = "Reservation object A",
                            ObjectOwnerID = 1
                        });
                });

            modelBuilder.Entity("Reservator.Model.Role", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("1");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            DateCreated = new DateTime(2019, 5, 19, 14, 40, 48, 576, DateTimeKind.Local).AddTicks(7884),
                            Description = "User role",
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Reservator.Model.User", b =>
                {
                    b.Property<int?>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("1");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("DateModified")
                        .ValueGeneratedOnUpdate()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Active = true,
                            DateCreated = new DateTime(2019, 5, 19, 14, 40, 48, 574, DateTimeKind.Local).AddTicks(9158),
                            Email = "test.test@test.test",
                            FirstName = "Test",
                            LastName = "User",
                            Password = "testuser",
                            UserName = "tUser"
                        });
                });

            modelBuilder.Entity("Reservator.Model.Reservation", b =>
                {
                    b.HasOne("Reservator.Model.ReservationObject", "ReservationObject")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservationObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reservator.Model.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Reservator.Model.ReservationObject", b =>
                {
                    b.HasOne("Reservator.Model.ObjectOwner", "ObjectOwner")
                        .WithMany("ReservationObjects")
                        .HasForeignKey("ObjectOwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
